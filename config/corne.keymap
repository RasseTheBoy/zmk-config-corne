/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        laptop_pswd: laptop_pswd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp N0 &kp V &kp N3 &kp R &kp N &kp N3 &kp R>;
            label = "LAPTOP_PSWD";
        };

        desktop_pswd: desktop_pswd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp N3 &kp N4 &kp L &kp W &kp N0 &kp R &kp L &kp D>;
            label = "DESKTOP_PSWD";
        };

        fcb_full: fcb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp LS(ENTER) &kp LS(ENTER) &kp GRAVE &kp GRAVE &kp GRAVE &kp UP_ARROW>;
            label = "Fenced Code Block - Full";
        };

        fcb_single: fcb_single {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "Fenced Code Block - Single";
        };

        laptop_pin: laptop_pin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N6 &kp N9 &kp N6>;
            label = "LAPTOP_PIN";
        };

        desktop_pin: desktop_pin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N8 &kp N8 &kp N4>;
            label = "DESKTOP_PIN";
        };

        pswd: pswd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp SQT &kp SQT &kp N0 &kp N &kp LS(M) &kp U &kp N &kp LS(M) &kp AT &kp S &kp T &kp E &kp R &kp N1 &kp AT &kp V &kp AT &kp N1 &kp N>;
            label = "PSWD";
        };
    };

    behaviors {
        ht_kp: ht_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Tap - Key Press";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        scw: scw {
            compatible = "zmk,behavior-tap-dance";
            label = "Shift Caps Word";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };

        auto_fcb: auto_fcb {
            compatible = "zmk,behavior-hold-tap";
            label = "Automatic Fenced Code Block";
            bindings = <&fcb_full>, <&fcb_single>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <400>;
            require-prior-idle-ms = <400>;
        };

        ht_kp_hwu: ht_kp_hwu {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Tap - Key Press - Hold While Undecided";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            hold-while-undecided;
        };

        laptop_secrets: laptop_secrets {
            compatible = "zmk,behavior-hold-tap";
            label = "LAPTOP_SECRETS";
            bindings = <&laptop_pswd>, <&laptop_pin>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        desktop_secrets: desktop_secrets {
            compatible = "zmk,behavior-hold-tap";
            label = "DESKTOP_SECRETS";
            bindings = <&desktop_pswd>, <&desktop_pin>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods - Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mod - Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_colemak {
            bindings = <&tog 0>;
            key-positions = <24 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&ht_kp ESCAPE TAB  &kp Q            &kp W            &kp F              &kp P         &kp B                          &kp J                         &kp L         &kp U               &kp Y            &ht_kp SEMICOLON COLON  &kp LC(BACKSPACE)
&kp SQT            &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LEFT_SHIFT S  &hml LCTRL T  &kp G                          &kp M                         &hmr RCTRL N  &hmr RIGHT_SHIFT E  &hmr LEFT_ALT I  &hmr RIGHT_GUI O        &kp SQT
&scw               &kp Z            &kp X            &kp C              &kp D         &kp V                          &kp K                         &kp H         &kp COMMA           &kp DOT          &kp FSLH                &scw
                                                     &kp LEFT_GUI       &mo 1         &ht_kp_hwu LEFT_SHIFT SPACE    &ht_kp_hwu RIGHT_SHIFT ENTER  &mo 2         &kp LCTRL
            >;
        };

        layer_1 {
            bindings = <
&kp ESCAPE     &trans       &kp DOLLAR  &kp AMPERSAND    &kp PERCENT   &trans    &kp TILDE                       &kp PLUS                 &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH  &kp BACKSPACE
&auto_fcb 0 0  &kp AT_SIGN  &kp HASH    &kp EXCLAMATION  &kp QUESTION  &tog 4    &kp MINUS                       &ht_kp UNDERSCORE EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH      &kp GRAVE
&trans         &trans       &kp K_CUT   &kp K_COPY       &kp K_PASTE   &trans    &kp CARET                       &kp ASTERISK             &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE       &trans
                                        &trans           &trans        &trans    &ht_kp LC(BACKSPACE) BACKSPACE  &mo 3                    &trans
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans          &kp PRINTSCREEN  &trans      &trans         &trans     &ht_kp LC(DELETE) DELETE  &kp BSPC
&kp LCTRL   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &kp HOME         &kp LEFT    &kp DOWN       &kp UP     &kp RIGHT                 &kp END
&trans      &kp N6  &kp N7  &kp N8  &kp N9  &kp N0          &kp INSERT       &kp K_BACK  &kp PAGE_DOWN  &kp PG_UP  &kp K_FORWARD             &trans
                            &trans  &mo 3   &kp LEFT_ALT    &trans           &trans      &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &trans  &kp LS(LC(LA(F2)))  &kp LA(LS(LC(F3)))  &kp K_POWER  &trans     &mkp LCLK         &mmv MOVE_LEFT  &mmv MOVE_DOWN        &mmv MOVE_UP          &mmv MOVE_RIGHT       &mkp RCLK
&kp F11     &kp F1  &kp F2              &kp F3              &kp F4       &kp F5     &kp C_PLAY_PAUSE  &kp C_PREV      &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT            &kp K_MUTE
&kp F12     &kp F6  &kp F7              &kp F8              &kp F9       &kp F10    &trans            &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &desktop_secrets 0 0  &laptop_secrets 0 0
                                        &trans              &trans       &trans     &trans            &trans          &trans
            >;
        };

        underscore_space {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                              &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &ht_kp_hwu LEFT_SHIFT UNDERSCORE    &trans  &trans  &trans
            >;
        };
    };
};
