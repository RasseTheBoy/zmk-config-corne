/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        laptop_pswd: laptop_pswd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp N0 &kp V &kp N3 &kp R &kp N &kp N3 &kp R>;
            label = "LAPTOP_PSWD";
        };

        desktop_pswd: desktop_pswd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp N3 &kp N4 &kp L &kp W &kp N0 &kp R &kp L &kp D>;
            label = "DESKTOP_PSWD";
        };

        fcb_full: fcb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp LS(ENTER) &kp LS(ENTER) &kp GRAVE &kp GRAVE &kp GRAVE &kp UP_ARROW>;
            label = "Fenced Code Block - Full";
        };

        fcb_single: fcb_single {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "Fenced Code Block - Single";
        };
    };

    behaviors {
        ht_kp: ht_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Tap - Key Press";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        scw: scw {
            compatible = "zmk,behavior-tap-dance";
            label = "Shift Caps Word";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };

        auto_fcb: auto_fcb {
            compatible = "zmk,behavior-hold-tap";
            label = "Automatic Fenced Code Block";
            bindings = <&fcb_full>, <&fcb_single>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <400>;
            require-prior-idle-ms = <400>;
        };

        ht_kp_hwu: ht_kp_hwu {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Tap - Key Press - Hold While Undecided";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&ht_kp ESCAPE TAB  &kp Q  &kp W           &kp E            &kp R             &kp T                          &kp Y                         &kp U           &kp I      &kp O    &kp P        &kp LC(BSPC)
&kp SQT            &kp A  &ht_kp LC(S) S  &kp D            &kp F             &kp G                          &kp H                         &ht_kp UNDER J  &kp K      &kp L    &kp COLON    &kp SQT
&scw               &kp Z  &ht_kp K_CUT X  &ht_kp K_COPY C  &ht_kp K_PASTE V  &kp B                          &kp N                         &kp M           &kp COMMA  &kp DOT  &key_repeat  &scw
                                          &kp LGUI         &mo 1             &ht_kp_hwu LEFT_SHIFT SPACE    &ht_kp_hwu RIGHT_SHIFT ENTER  &mo 2           &kp RCTRL
            >;
        };

        layer_1 {
            bindings = <
&kp ESCAPE     &trans       &trans     &kp AMPERSAND    &kp PERCENT   &kp DOLLAR    &kp TILDE      &kp PLUS                 &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH  &kp BACKSPACE
&auto_fcb 0 0  &kp AT_SIGN  &kp HASH   &kp EXCLAMATION  &kp QUESTION  &trans        &kp MINUS      &ht_kp UNDERSCORE EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH      &kp GRAVE
&trans         &trans       &kp K_CUT  &kp K_COPY       &kp K_PASTE   &trans        &kp CARET      &kp ASTERISK             &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE       &trans
                                       &trans           &trans        &trans        &kp BACKSPACE  &mo 3                    &trans
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans          &kp PRINTSCREEN  &trans      &trans         &trans     &ht_kp LC(DELETE) DELETE  &kp BSPC
&kp LCTRL   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &kp HOME         &kp LEFT    &kp DOWN       &kp UP     &kp RIGHT                 &kp END
&trans      &kp N6  &kp N7  &kp N8  &kp N9  &kp N0          &kp INSERT       &kp K_BACK  &kp PAGE_DOWN  &kp PG_UP  &kp K_FORWARD             &trans
                            &trans  &mo 3   &kp LEFT_ALT    &trans           &trans      &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &trans  &kp LS(LC(LA(F2)))  &kp LA(LS(LC(F3)))  &kp K_POWER  &trans     &mkp LCLK         &mmv MOVE_LEFT  &mmv MOVE_DOWN        &mmv MOVE_UP          &mmv MOVE_RIGHT  &mkp RCLK
&kp F11     &kp F1  &kp F2              &kp F3              &kp F4       &kp F5     &kp C_PLAY_PAUSE  &kp C_PREV      &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT       &kp K_MUTE
&kp F12     &kp F6  &kp F7              &kp F8              &kp F9       &kp F10    &trans            &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &desktop_pswd    &laptop_pswd
                                        &trans              &trans       &trans     &trans            &trans          &trans
            >;
        };
    };
};
